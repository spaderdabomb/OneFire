//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/InventoryControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Game.Input
{
    public partial class @InventoryControls: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @InventoryControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""InventoryControls"",
    ""maps"": [
        {
            ""name"": ""InventoryActions"",
            ""id"": ""c50ec0f1-b298-4bf8-a34d-d72c0db2bfa8"",
            ""actions"": [
                {
                    ""name"": ""DropItem"",
                    ""type"": ""Button"",
                    ""id"": ""e8423db8-c250-4c6c-bbe6-296b7fa9cfc7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SplitItemHalf"",
                    ""type"": ""Button"",
                    ""id"": ""29a7c270-ab5f-4e2e-a76a-afa7d6e18c8d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SplitItemOne"",
                    ""type"": ""Button"",
                    ""id"": ""6edc1485-e5af-4812-993b-2316dcdc567c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EquipItem"",
                    ""type"": ""Button"",
                    ""id"": ""8b6bc487-3a7c-49d1-9410-e878ed7641a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""47ac2009-5709-4c78-a1fe-c5c6c7f786cb"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DropItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""abf1000e-7f41-4125-8c11-f9cb1090cb38"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SplitItemHalf"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b43f13b2-d518-4547-9a62-dd396f43f78a"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SplitItemOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""ShiftClick"",
                    ""id"": ""0b568bc5-0c18-453a-a6ed-f90d1338e4fb"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EquipItem"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""554d6844-da8c-4784-8b82-fba3d0acc440"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EquipItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""4be7a30b-75a0-4745-8d51-fdaa05fc136c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EquipItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // InventoryActions
            m_InventoryActions = asset.FindActionMap("InventoryActions", throwIfNotFound: true);
            m_InventoryActions_DropItem = m_InventoryActions.FindAction("DropItem", throwIfNotFound: true);
            m_InventoryActions_SplitItemHalf = m_InventoryActions.FindAction("SplitItemHalf", throwIfNotFound: true);
            m_InventoryActions_SplitItemOne = m_InventoryActions.FindAction("SplitItemOne", throwIfNotFound: true);
            m_InventoryActions_EquipItem = m_InventoryActions.FindAction("EquipItem", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // InventoryActions
        private readonly InputActionMap m_InventoryActions;
        private List<IInventoryActionsActions> m_InventoryActionsActionsCallbackInterfaces = new List<IInventoryActionsActions>();
        private readonly InputAction m_InventoryActions_DropItem;
        private readonly InputAction m_InventoryActions_SplitItemHalf;
        private readonly InputAction m_InventoryActions_SplitItemOne;
        private readonly InputAction m_InventoryActions_EquipItem;
        public struct InventoryActionsActions
        {
            private @InventoryControls m_Wrapper;
            public InventoryActionsActions(@InventoryControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @DropItem => m_Wrapper.m_InventoryActions_DropItem;
            public InputAction @SplitItemHalf => m_Wrapper.m_InventoryActions_SplitItemHalf;
            public InputAction @SplitItemOne => m_Wrapper.m_InventoryActions_SplitItemOne;
            public InputAction @EquipItem => m_Wrapper.m_InventoryActions_EquipItem;
            public InputActionMap Get() { return m_Wrapper.m_InventoryActions; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(InventoryActionsActions set) { return set.Get(); }
            public void AddCallbacks(IInventoryActionsActions instance)
            {
                if (instance == null || m_Wrapper.m_InventoryActionsActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_InventoryActionsActionsCallbackInterfaces.Add(instance);
                @DropItem.started += instance.OnDropItem;
                @DropItem.performed += instance.OnDropItem;
                @DropItem.canceled += instance.OnDropItem;
                @SplitItemHalf.started += instance.OnSplitItemHalf;
                @SplitItemHalf.performed += instance.OnSplitItemHalf;
                @SplitItemHalf.canceled += instance.OnSplitItemHalf;
                @SplitItemOne.started += instance.OnSplitItemOne;
                @SplitItemOne.performed += instance.OnSplitItemOne;
                @SplitItemOne.canceled += instance.OnSplitItemOne;
                @EquipItem.started += instance.OnEquipItem;
                @EquipItem.performed += instance.OnEquipItem;
                @EquipItem.canceled += instance.OnEquipItem;
            }

            private void UnregisterCallbacks(IInventoryActionsActions instance)
            {
                @DropItem.started -= instance.OnDropItem;
                @DropItem.performed -= instance.OnDropItem;
                @DropItem.canceled -= instance.OnDropItem;
                @SplitItemHalf.started -= instance.OnSplitItemHalf;
                @SplitItemHalf.performed -= instance.OnSplitItemHalf;
                @SplitItemHalf.canceled -= instance.OnSplitItemHalf;
                @SplitItemOne.started -= instance.OnSplitItemOne;
                @SplitItemOne.performed -= instance.OnSplitItemOne;
                @SplitItemOne.canceled -= instance.OnSplitItemOne;
                @EquipItem.started -= instance.OnEquipItem;
                @EquipItem.performed -= instance.OnEquipItem;
                @EquipItem.canceled -= instance.OnEquipItem;
            }

            public void RemoveCallbacks(IInventoryActionsActions instance)
            {
                if (m_Wrapper.m_InventoryActionsActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IInventoryActionsActions instance)
            {
                foreach (var item in m_Wrapper.m_InventoryActionsActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_InventoryActionsActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public InventoryActionsActions @InventoryActions => new InventoryActionsActions(this);
        public interface IInventoryActionsActions
        {
            void OnDropItem(InputAction.CallbackContext context);
            void OnSplitItemHalf(InputAction.CallbackContext context);
            void OnSplitItemOne(InputAction.CallbackContext context);
            void OnEquipItem(InputAction.CallbackContext context);
        }
    }
}
